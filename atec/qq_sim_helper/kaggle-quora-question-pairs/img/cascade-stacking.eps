%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1188.000000 655.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 594 328
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 594 328
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /X put
dup 34 /G put
dup 35 /B put
dup 36 /v put
dup 37 /one put
dup 38 /underscore put
dup 39 /two put
dup 40 /D put
dup 41 /L put
dup 42 /e put
dup 43 /l put
dup 44 /space put
dup 45 /zero put
dup 46 /O put
dup 47 /r put
dup 48 /i put
dup 49 /g put
dup 50 /n put
dup 51 /a put
dup 52 /F put
dup 53 /t put
dup 54 /u put
dup 55 /s put
dup 56 /R put
dup 57 /three put
dup 58 /ellipsis put
dup 59 /T put
dup 60 /o put
dup 61 /p put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<








00>] def
/CharStrings 31 dict dup begin
/.notdef 0 def
/space 1 def
/zero 2 def
/one 3 def
/two 4 def
/three 5 def
/B 6 def
/D 7 def
/F 8 def
/G 9 def
/L 10 def
/O 11 def
/R 12 def
/T 13 def
/X 14 def
/underscore 15 def
/a 16 def
/e 17 def
/g 18 def
/i 19 def
/l 20 def
/n 21 def
/o 22 def
/p 23 def
/r 24 def
/s 25 def
/t 26 def
/u 27 def
/v 28 def
/ellipsis 29 def
/uni2B91 30 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec

9DAA89399D3C34CC652360AF3B1EDA3F8FB48DA4339CA1ADF1E5AB291A3D131864BD66E30E3AA94773902F3CAB89D6C46F81C4AA05E24494C1F88040BC3931515E7960D83544948F8D8A6EC7FA0D05BADB18E70A70B3E6D9113ABACEAAB15D58D00120A048703C9E40367B703EF99EBCBEB530DF9A6B5C150EE3DAF42515F1576AEE397C67FD31E08F8F9D74BA3B07CB0482F2748EDB281C5A486FD2DC668A785D21306FCA1C839A3FB892819556507B56A368BC0F48624ED9CBA12561CDA19A54ACBBD1CA9C0332452C7DEB5CC6C6991668FC0EA43F17E37A6FA287D497FEF3956279B37728630124FDE7788516E47C201A0D75D47BB2E5DA500DD09FAF820DB9F62E001B2897AD60A943AAF63A93936225DDA46AB976178685812E9CAC185D62CB1892CC1E4A6A68D249405F9B3165E7D33F761A00EA642D40E609E46FEA83BDC79F94CF261BF31F22EE44008DCE0042834473F1764167A09914A6DF437BB9E377CDD57C0203A1361EDD5B395C30B971B895F1FEC143BFE5C975E14233ED517BFCDCD5AFD85624B49751FFC55B45D23A118DFF361A6C8B06E0A67E20DC4E34D6DC06B99C2AE215AE4DD32A7A2547354F6D8E76D1149EE06383B38771B1CC4F278E2DB48A8E171BFCAF53694DFDE2F0D8187DAC2BFB0A5B494AB79B3AFAF69BE972E15F9EC4AC784797C7E9A28728A574A4A5068211186AA29CA4E2BC2FD5F30B0A66DC25ADC875FAD29EDEDA90E3B5D090AF94CFCE96F5CD7D1318D55E1729989F283345E247E5544810D4C7144904AFFEA23CF748ABE7B7AB38BE8D3E517542C35E7DA409CB9E626B1CF0BA9D2307E599868ED2621064CFC3F8163D112EE84BDC156D86687D57C7B7680D6D62232A8B38A4E710567D245B72A88BE0052E61C7A7E5448ED01B7B346F37563FD68304012B16266D2924E04085B37D81635B9C804A6E95FDCAD782B93AADCF4177C9D84B83FC8C9AC1A463B38268B71D6F19A3D748CF4293AD6917CBE6194E428058A381AB8C757439E3661820ECC8CFFB1AED2A0EB090598B8DC1A73A592D3232F84168642D55478E7FBE9091AE065D224AA6422728EDEB28F6CB7846EA39A6D26729361BB93A549193901E7E884E0A861158AE806560033005D7F3E52151213D2EB275FB633E60238E7EEF586C0FAB0E3D6442F173074F7D76A6B0FA4469AC2B8C90DE9C02472D1DCC4FE7DD507CA5511F25820BD3D31CD0C8E12250A0718A53B59AD0075F8FA1D81F08534B0C2A23FDDE07CF698831BEF68AB047659DA67017772B23923F6333DD5CAC56CDCB3A20B621841C72CB08105310F9042EDA03BED10CCD7060B3A779DA8FF6FF37B7012B9913EA47630ED917AD41A8E0B5B80FF2587D163A732286C11A5CE453A8D2A80122D2793DB03D80BB5B90048420F8A1C8BB1B8E6E69609C0D37BFCD2694934D06DB2A0D

6BFB83A299E9837DB4B1332EBACD13784137018D713649573349B3F320119F746C19695D95FCC011C6D6F358B7B70140D22ACCD85797DF59279AA57E07AC0DF6B62607C033FD0866E67FFB8739707BFBD0C8146A3C435B085FB4DE770D9D576DB3E6630199895D1D7BA8737DCC1C0FB7EFFEBB37DD454AE23A05221C4A0C98BE9E8B8F2FD87AD5EDA15B60B1CBA43772186D31FC26AA9E667DEF60D2905A1AD41112BEF2BA4B4755570BFEF54B634E663BBB703D1887CB4A9A7CDC8FFB31D54D74AD8F5C028CF5957A62F552E2798D9A8BABE3DAD6521AD48EC60481E6535DC9A0E8C881AFF7021A479F836470A7DF5EE84DE3CE7A8A93DC726D213863AF6DE82A918B6C1D1693811E5510B111BEA449133A8297EE3890CD1F3D3ACFAD09DE6BC880E68C69B64D62F13A67AFF2407C89E41B343216ED5820EF3F0CC6A59CCA96C16C84D497A20246B8969496AE333F0078F4998D277EE65FBAF007EB7607841EE9A718F894CB31A07C1A967F0626A3B8A8D89430602016DF6B8EEF1704CE42671B06630423B48B6FC2408C4063748F21F7C100A73CBCB20D51F9AB55A6CF429EA21CBFA3F270BA20C76F827BB4E31BB8DA60826F7523C03D3C579E4DE83C53AF547BD09724F7DF4A082C4AA210FB09489106670709831FD08776E49DD65C9509727CDA9936BCEAE16060FEB154CA0579A5A26B19B678D426CC7CB8E3F39D81C9A93EE8AE59BA20A580A3CCCD1A86913BC837ABC8046FDB08A2D4F869739ADA20437E184FE04EAB150E25005F500F3CEA681E016CC3C931A5DB55587440C27B529A31E13641669617B5A65EAA93291347609ABEC9A20A794BE21EA0C8900126668EA9DAB246839B9F08377943BF1E681FE39C3057A33179414E80AF56381F79E024CF79F735F55A46FAFCAFCEC26242460D377065CCE768718B59D634DA7557A85A830A06FD6CECA681E74451821239869BE5DD48015D4D65B781A376D8F8C1ED34951FA6DD788835E2D1B830E8792D394995A0598166987AF4E8253AC61411CA4AB2615F653EC5B9E70C4A8233E06F29226284C5090CB434ADFAE18FF15CDDF2D2DC2C8FD531B1B00FD889AAA17794DDD8BB681F1296817A352EFAB64B14BAD6B366E82878E453F68E1C9179DE7CC85C2440A8D259C07DC231C8C8F533313DACA1D06F3E2A4515141DCF39EFADEAC2328B5FAC06DFEF236BAA5F97DEDA3152BD910E9FAC82914D4A396E142686533AEA9EBEF931C054E1180926E353010BF92000A17A34D3B14955735AE778C2319DED8B01CAA2EDA95319C549A931045725811B5C896A426A5CBC126EE2DFC7E254671FB9A38583C3975BDC0D471C0BBA94DCE518FEB1A61F32147769C53BE79AD708D69FFB9B55C335BFDFFBDC3BE4F047714B8BC26D5EC958952EB6AF02FE4FF5B2B3754C60D96389BBB348D09168C82F50
95DAA6E5BD13AFF1CFC2DC62399EDFFB5A9D17A341725D4C2CC8D696F4C6F580E2DA8C857B158FBEA1BB54D14EC72F1D0A9CBFC87C2DD73AEE40439813D1C058898D6F16EAC93DB8AFF3FC731CEF2E1FFC639F42F3257E8227659937F1B4FF8818F77C178C71BC23516B41E7BC7C5BC2B62DD5D542F407009130F2AD69008AC76DCD60746963140239BD0B68A6AD9D03F4D44EB5D67EF169F9165484EE62FC8F57F115020E2238ABE61054B11CE399C88A3541AED0BEB1C7A1A22FCEEB45F2AF2E4E603AD1A36C3DCF3460FA3D41B7C4FF26DE21AF09B450BF9E55CD29A7932662ED1C3448D2FD21D51D780169484BB3F99530EC6AF7D4DFF6A4C09B0FF6D33695633888645931E8A3050D5949E8F36092DA4741AEAFAB35AF25514352DA77CB99236DBCFA328739DED2B50CE175F3EB62CF55FCB7D26B0ED7BBAD6B6E6E76448D0E687B5681F8E50A1D03917F1244D1E983AD8258B07B6623A51E883172CC5A038BAE5AA298F40945731DC238D46EF6C9D981EDDDC185F4F210C39DB2D07BF4B677F9F3C2130469BC8BEDD50223F49521DD27BFC0ACAFEADCC14F0B6ED2F7DEA615E42998A64C0C25F5BFBA8842D70E561C5ACB8D619E53B8875976367F5CD4C0C31E9FDAF70F1D63F617D94677B802070FA6CCE7E184ACC150E0F75A2C06F99E3FC4AB1AB83516A763B03CAC5A52879611D0816B5ED839BBAAF33A0D968228DB58E66355EA6F2179331A296BD05A42F55D6D913668CE297CE8299AAF201A63151280398C0C96CDDCC596C47427CE7FFB253F52FE3F5CF15BC6F9367D2335D187B566F92C37CD8CEA880A6518AB11FD41E5683FB9B309F12CAC630C2E5BD9AFAE9BDDFAA7339608AFF0BDEC9F6D59D388B231AB0D03CA50C54B95F4A897705850871080EEA03F826B456E2C9E35A14F49711A393062AF900B32BC59A5C55981723BB6DFFB0FF8E66536025F9364A9F55DD7A7AC5D9F36D40362492B9C67E77C6B2DCF6BEEE3C6BC5333B6AF4A1E440E577980FFE1252A3E854458D5D07B1CAC5B6D1727AC2A686A419F88DC9584E6965556BB2C65675D4F6BACFC3FBAD94FDBBB780047B1F852CACE91F2EF46DF8569304056C47B1C4AD6576AEAF033727D5ACDB0E38024F927B397ACD0916047870F337FCDA282FC90273E8BBECDBAA5DCA5109B7D818A884D5D11C15C1FCBDD55CBB7130D427BA2AF531E65274350C8D450494D4ABABF0520A09791C16FDA087FCB5E61F5E3873F8A8B67144948A2F5487204046132F9DF8F6E3DF50BD871736832A0B787D350DF13403A12BAE1F4A2187EFD8DB729000F308F51817D8A6CD02674D076FA1A348055956AF50C87E843867E3180C6DB7AAD80D610484CC0C8FDE0ACFF022683DC854AB5DE1B9820DD149E315862AB2DBA0697D67ED6D6708B6A958F44CC75A71CB21F8CE24D2D47F1AFCB3A
96949BE7E9569EB9FEDAE91CE733C809E582DC32156CA378F7FAAC481DA7D721A118BEBE5FEF59661857BFC3446A5EB5E175E0F24A7AE8DD4ADB34B3991628D6F0C8319E056C679A2733A54A5A2B0F04431D6F308792E7C957E8CB79C1ADD4B9B2BF8C80A563E606BEA146F5BB0C069D3122812D81AD867FDE616B0CB626C87237617338FC0C5833B644AB975AE08859EB8D2B55F53CA5356D972FEDDDA3179E0895127EC56765E17A05637F2FB52F9A049D0D9D413707169B08484B0B17235EAAF58F42AE3D691C42A842988764CEA14E69D0271057FCADA1C4CAA4FA98570426DE32EA9EB95731BE9A0FBE7B2E8D815E5F4D8D15A9614DD1DA4F4669FD8A968B75BF66138739DBA76347B5023E5A3B1A8268AED41FED681F4DD1FD8AF00B9AF1A9D18B0507B375AA925EA9FA1330BB8420212BBF49E654D3DB18141FC16999AF3D65C4DB5167FFCBE1FDF3B465AD5B714E5EF68ACF43F1EDC67EACBD2205AF70C4E6B39385623D6143FDF8A824DD3B77FD7BA4BBE77D91938A45D2036F18075FC160661991F45B81E581316B6AB96F46684057EBCB7629FC528E30710B28914E020BB20BCB8E7E02726AB9DCE113828759C7271055BFE1DA3AEA1C116DAFD349B5A1D52654F8BD8DC261577CC3A5735C1EA3760CD2177174BFEF059DED5831ED7A00456F15E7A26FD9A5C81748AB4C5CD787C42A7AA67A2AC6724DC898D63FDB0E2BF118FBC0F5E13F98D899CCC8C5E652AEC35FCD752225850EAD72C4C3DD3D4B1810E0D28CCAB32725D2CDD3C67BEE4FE27F3A62541DFDA3E4B3AD1F8002D8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: PingFangSC-Regular
%!FontType1-1.0: AAAAAC+PingFangHK-Regular 001.003%%CreationDate: 6/12/17% Copyright 2017 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAC+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /cid3 putdup 2 /cid335 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6A1B4AE43A1CC4EAC4309216DEB726A93E1CB926F0C42A9800D5D12FD96D9E404038CBD7755C4077D09A39F7041DC52D5D940DE4888AAD72326417B52340136D9B99AF8ACBFB309A1633303B2230D5DC48BC533F1726292CDD44345F8F3C1E4E9E06034E0ED00D19CFEBF7C8994BDD917E45277C1B3D598B1E9B9FB40CDD2142FFF65886B9CE7515CF02873077287D684CE9B145B988A2DA620FDDB106BF545204810CAB962424116E6768D8124F1AF63A51F9BC7B8E660EED4CD2D79A5D7419B916D8A0EC6378328E88F0AF6FD1F3C0A56EB57C7D475743CB6EE04BB00166AEF1355B4D2466A1DD711DE8B215594136856B96061A9431DA3CA6712E3CB31ED49B11433CD0EA63FD5D16A9D217EBC72B6C932845C283DA8131158FF053B38331EAEAC6C9A02940BAD5869649761DE74F5C96C529562079CA068514D5F099BAB90252AF98CD7F461029BE1CF75A83D91DA3BD542366CA1A328838D8FC101919DDA504FB806D122C6B1CF18599203EE2E3E0EAEACB76317EB7BC6E2C8A8AB383379A63DA9263409DBCEA276480DB386E00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /cid335 putdup 34 /cid3 putreadonly def/$SubFontArray [/AAAAAC+PingFangHK-Regular findfont ] def/CharProcs 4 dictdup /cid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /cid3 {(\001) 0 $SP} putdup /cid335 {(\002) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/PingFangSC-Regular cguidfix
/F2.1/PingFangSC-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 594 327.5 rc
-38 350 m
628 350 l
628 -88.5 l
-38 -88.5 l
h
-38 350 m
f
1 J
1 j
[
1
4
] 0 d
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
377.00787 136.06299 m
532.91339 136.06299 l
532.91339 657.63782 l
377.00787 657.63782 l
h
377.00787 136.06299 m
S
612.28345 136.06299 m
768.18896 136.06299 l
768.18896 657.63782 l
612.28345 657.63782 l
h
612.28345 136.06299 m
S
864.56689 136.06299 m
1020.4724 136.06299 l
1020.4724 657.63782 l
864.56689 657.63782 l
h
864.56689 136.06299 m
S
[
8
5
] 0 d
187.08661 153.07086 m
303.3071 153.07086 l
303.3071 297.63779 l
187.08661 297.63779 l
h
187.08661 153.07086 m
S
187.08661 490.39371 m
303.3071 490.39371 l
303.3071 637.79529 l
187.08661 637.79529 l
h
187.08661 490.39371 m
S
[] 0 d
195.93346 158.74016 m
295.85471 158.74016 l
295.85471 198.4252 l
195.93346 198.4252 l
h
195.93346 158.74016 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 84.947044 260.70865 cm
/F1.1[ 16 0 0 -16 0 0]sf
-16.440001 -3.447998 m
(!"#)[ 9.776000 12.144000 0.000000 ] xS
-16.896 15 m
($%&%)[ 8.000000 8.896000 8.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
195.93346 204.09448 m
295.85471 204.09448 l
295.85471 243.77953 l
195.93346 243.77953 l
h
195.93346 204.09448 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 84.947044 238.03149 cm
-16.440001 -3.447998 m
(!"#)[ 9.776000 12.144000 0.000000 ] xS
-16.896 15 m
($%&')[ 8.000000 8.896000 8.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
195.93346 249.44882 m
295.85471 249.44882 l
295.85471 289.13385 l
195.93346 289.13385 l
h
195.93346 249.44882 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 84.947044 215.35432 cm
/F2.1[ 16 0 0 -16 0 0]sf
-18.664 6 m
(!"!)[ 16.000000 5.328000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
197.40793 498.89764 m
297.32919 498.89764 l
297.32919 538.5827 l
197.40793 538.5827 l
h
197.40793 498.89764 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 85.68428 90.629921 cm
/F1.1[ 16 0 0 -16 0 0]sf
-10.08 -3.447998 m
(\(\))[ 11.264000 0.000000 ] xS
-16.896 15 m
($%&%)[ 8.000000 8.896000 8.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
195.93346 544.25195 m
295.85471 544.25195 l
295.85471 583.93701 l
195.93346 583.93701 l
h
195.93346 544.25195 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 84.947044 67.952759 cm
-10.08 -3.447998 m
(\(\))[ 11.264000 0.000000 ] xS
-16.896 15 m
($%&')[ 8.000000 8.896000 8.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
195.93346 589.60632 m
295.85471 589.60632 l
295.85471 629.29132 l
195.93346 629.29132 l
h
195.93346 589.60632 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 84.947044 45.275593 cm
/F2.1[ 16 0 0 -16 0 0]sf
-18.664 6 m
(!"!)[ 16.000000 5.328000 0.000000 ] xS
[
8
5
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
187.08661 320.31497 m
303.3071 320.31497 l
303.3071 464.8819 l
187.08661 464.8819 l
h
187.08661 320.31497 m
S
[] 0 d
195.93346 325.98425 m
295.85471 325.98425 l
295.85471 365.66928 l
195.93346 365.66928 l
h
195.93346 325.98425 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 84.947044 177.08661 cm
/F1.1[ 16 0 0 -16 0 0]sf
-16 -3.447998 m
(\)"#)[ 8.896000 12.144000 0.000000 ] xS
-16.896 15 m
($%&%)[ 8.000000 8.896000 8.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
195.93346 371.33859 m
295.85471 371.33859 l
295.85471 411.02362 l
195.93346 411.02362 l
h
195.93346 371.33859 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 84.947044 154.40945 cm
-16 -3.447998 m
(\)"#)[ 8.896000 12.144000 0.000000 ] xS
-16.896 15 m
($%&')[ 8.000000 8.896000 8.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
195.93346 416.6929 m
295.85471 416.6929 l
295.85471 456.37796 l
195.93346 456.37796 l
h
195.93346 416.6929 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 84.947044 131.73228 cm
/F2.1[ 16 0 0 -16 0 0]sf
-18.664 6 m
(!"!)[ 16.000000 5.328000 0.000000 ] xS
0.5 0 0 -0.5 88.466537 12.677167 cm
/F1.1[ 17 0 0 -17 0 0]sf
-27.080999 5.762001 m
(\)*$*+,-)[ 9.452000 9.129000 8.500000 9.129000 3.774000 4.726000 0.000000 ] xS
0.5 0 0 -0.5 189.43111 12.677167 cm
-27.080999 5.762001 m
(\)*$*+,%)[ 9.452000 9.129000 8.500000 9.129000 3.774000 4.726000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
345.82678 204.09448 m
389.78503 204.09448 l
S
0 J
0 j
0 i
397.78503 204.09448 m
389.78503 201.09448 l
389.78503 207.09448 l
h
397.78503 204.09448 m
S
1 J
1 j
0.60000002 i
87.874016 634.96063 m
87.874016 158.74016 l
130.39371 158.74016 l
130.39371 634.96063 l
h
87.874016 634.96063 m
S
/Cs2 SC
0 sc
0 i
0 0.5 0.5 0 16.566929 151.5748 cm
/F1.1[ 16 0 0 -16 0 0]sf
-60.599998 5.776001 m
(./01023+,4*356/*7)[ 12.160000 5.328000 3.552000 9.184000 3.552000 8.896000 8.592000 3.552000 4.448000 9.184000 8.592000 8.592000 5.040000 8.896000 5.040000 8.592000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
130.39371 225.24464 m
177.18663 225.33517 l
S
0 J
0 j
0 i
185.18661 225.35065 m
177.19243 222.33517 l
177.18083 228.33517 l
h
185.18661 225.35065 m
S
1 J
1 j
0.60000002 i
130.39371 392.41748 m
177.18666 392.56683 l
S
0 J
0 j
0 i
185.18663 392.59235 m
177.19624 389.56683 l
177.17709 395.5668 l
h
185.18663 392.59235 m
S
1 J
1 j
0.60000002 i
130.39371 564.16119 m
177.18661 564.10614 l
S
0 J
0 j
0 i
185.18661 564.09674 m
177.18309 561.10614 l
177.19016 567.10614 l
h
185.18661 564.09674 m
S
1 J
1 j
[
8
5
] 0 d
0.60000002 i
396.8504 153.07086 m
513.07086 153.07086 l
513.07086 297.63779 l
396.8504 297.63779 l
h
396.8504 153.07086 m
S
[] 0 d
405.69724 158.74016 m
505.6185 158.74016 l
505.6185 198.4252 l
405.69724 198.4252 l
h
405.69724 158.74016 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 189.82893 260.70865 cm
-16.440001 -3.447998 m
(!"#)[ 9.776000 12.144000 0.000000 ] xS
-16.896 15 m
($'&%)[ 8.000000 8.896000 8.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
405.69724 204.09448 m
505.6185 204.09448 l
505.6185 243.77953 l
405.69724 243.77953 l
h
405.69724 204.09448 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 189.82893 238.03149 cm
-16.440001 -3.447998 m
(!"#)[ 9.776000 12.144000 0.000000 ] xS
-16.896 15 m
($'&')[ 8.000000 8.896000 8.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
405.69724 249.44882 m
505.6185 249.44882 l
505.6185 289.13385 l
405.69724 289.13385 l
h
405.69724 249.44882 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 189.82893 215.35432 cm
/F2.1[ 16 0 0 -16 0 0]sf
-18.664 6 m
(!"!)[ 16.000000 5.328000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
345.82678 371.33859 m
389.78503 371.33859 l
S
0 J
0 j
0 i
397.78503 371.33859 m
389.78503 368.33859 l
389.78503 374.33859 l
h
397.78503 371.33859 m
S
1 J
1 j
[
8
5
] 0 d
0.60000002 i
396.8504 323.1496 m
513.07086 323.1496 l
513.07086 467.71652 l
396.8504 467.71652 l
h
396.8504 323.1496 m
S
[] 0 d
405.69724 328.81891 m
505.6185 328.81891 l
505.6185 368.50394 l
405.69724 368.50394 l
h
405.69724 328.81891 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 189.82893 175.6693 cm
/F1.1[ 16 0 0 -16 0 0]sf
-16 -3.447998 m
(\)"#)[ 8.896000 12.144000 0.000000 ] xS
-16.896 15 m
($'&%)[ 8.000000 8.896000 8.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
405.69724 374.17322 m
505.6185 374.17322 l
505.6185 413.85828 l
405.69724 413.85828 l
h
405.69724 374.17322 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 189.82893 152.99213 cm
-16 -3.447998 m
(\)"#)[ 8.896000 12.144000 0.000000 ] xS
-16.896 15 m
($'&')[ 8.000000 8.896000 8.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
405.69724 419.52756 m
505.6185 419.52756 l
505.6185 459.21259 l
405.69724 459.21259 l
h
405.69724 419.52756 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 189.82893 130.31496 cm
/F2.1[ 16 0 0 -16 0 0]sf
-18.664 6 m
(!"!)[ 16.000000 5.328000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
345.82678 541.4173 m
389.78503 541.4173 l
S
0 J
0 j
0 i
397.78503 541.4173 m
389.78503 538.4173 l
389.78503 544.4173 l
h
397.78503 541.4173 m
S
1 J
1 j
[
8
5
] 0 d
0.60000002 i
396.8504 493.22833 m
513.07086 493.22833 l
513.07086 637.79529 l
396.8504 637.79529 l
h
396.8504 493.22833 m
S
[] 0 d
405.69724 498.89764 m
505.6185 498.89764 l
505.6185 538.5827 l
405.69724 538.5827 l
h
405.69724 498.89764 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 189.82893 90.629921 cm
/F1.1[ 16 0 0 -16 0 0]sf
-9.9280005 -3.447998 m
(\)8)[ 8.896000 0.000000 ] xS
-16.896 15 m
($'&%)[ 8.000000 8.896000 8.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
405.69724 544.25195 m
505.6185 544.25195 l
505.6185 583.93701 l
405.69724 583.93701 l
h
405.69724 544.25195 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 189.82893 67.952759 cm
-9.9280005 -3.447998 m
(\)8)[ 8.896000 0.000000 ] xS
-16.896 15 m
($'&')[ 8.000000 8.896000 8.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
405.69724 589.60632 m
505.6185 589.60632 l
505.6185 629.29132 l
405.69724 629.29132 l
h
405.69724 589.60632 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 189.82893 45.275593 cm
/F2.1[ 16 0 0 -16 0 0]sf
-18.664 6 m
(!"!)[ 16.000000 5.328000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
110.98678 158.74016 m
110.55118 116.22047 l
S
110.55118 116.22047 m
365.66928 116.22047 l
S
365.66928 116.22047 m
365.66928 416.6929 l
S
365.66928 416.6929 m
386.95038 416.6929 l
S
0 J
0 j
0 i
394.95038 416.6929 m
386.95038 413.6929 l
386.95038 419.6929 l
h
394.95038 416.6929 m
S
1 J
1 j
0.60000002 i
365.66928 245 m
386.95041 245.01767 l
S
0 J
0 j
0 i
394.95038 245.02432 m
386.95288 242.01767 l
386.94791 248.01767 l
h
394.95038 245.02432 m
S
1 J
1 j
[
8
5
] 0 d
0.60000002 i
632.12598 153.07086 m
748.34644 153.07086 l
748.34644 297.63779 l
632.12598 297.63779 l
h
632.12598 153.07086 m
S
[] 0 d
640.97284 158.74016 m
740.8941 158.74016 l
740.8941 198.4252 l
640.97284 198.4252 l
h
640.97284 158.74016 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 307.46674 260.70865 cm
/F1.1[ 16 0 0 -16 0 0]sf
-16.440001 -3.447998 m
(!"#)[ 9.776000 12.144000 0.000000 ] xS
-16.896 15 m
($9&%)[ 8.000000 8.896000 8.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
640.97284 204.09448 m
740.8941 204.09448 l
740.8941 243.77953 l
640.97284 243.77953 l
h
640.97284 204.09448 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 307.46674 238.03149 cm
-16.440001 -3.447998 m
(!"#)[ 9.776000 12.144000 0.000000 ] xS
-16.896 15 m
($9&')[ 8.000000 8.896000 8.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
640.97284 249.44882 m
740.8941 249.44882 l
740.8941 289.13385 l
640.97284 289.13385 l
h
640.97284 249.44882 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 307.46674 215.35432 cm
/F2.1[ 16 0 0 -16 0 0]sf
-18.664 6 m
(!"!)[ 16.000000 5.328000 0.000000 ] xS
[
8
5
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
632.12598 323.1496 m
748.34644 323.1496 l
748.34644 467.71652 l
632.12598 467.71652 l
h
632.12598 323.1496 m
S
[] 0 d
640.97284 328.81891 m
740.8941 328.81891 l
740.8941 368.50394 l
640.97284 368.50394 l
h
640.97284 328.81891 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 307.46674 175.6693 cm
/F1.1[ 16 0 0 -16 0 0]sf
-16 -3.447998 m
(\)"#)[ 8.896000 12.144000 0.000000 ] xS
-16.896 15 m
($9&%)[ 8.000000 8.896000 8.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
640.97284 374.17322 m
740.8941 374.17322 l
740.8941 413.85828 l
640.97284 413.85828 l
h
640.97284 374.17322 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 307.46674 152.99213 cm
-16 -3.447998 m
(\)"#)[ 8.896000 12.144000 0.000000 ] xS
-16.896 15 m
($9&')[ 8.000000 8.896000 8.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
640.97284 419.52756 m
740.8941 419.52756 l
740.8941 459.21259 l
640.97284 459.21259 l
h
640.97284 419.52756 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 307.46674 130.31496 cm
/F2.1[ 16 0 0 -16 0 0]sf
-18.664 6 m
(!"!)[ 16.000000 5.328000 0.000000 ] xS
[
8
5
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
632.12598 493.22833 m
748.34644 493.22833 l
748.34644 637.79529 l
632.12598 637.79529 l
h
632.12598 493.22833 m
S
[] 0 d
640.97284 498.89764 m
740.8941 498.89764 l
740.8941 538.5827 l
640.97284 538.5827 l
h
640.97284 498.89764 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 307.46674 90.629921 cm
/F1.1[ 16 0 0 -16 0 0]sf
-9.9280005 -3.447998 m
(\)8)[ 8.896000 0.000000 ] xS
-16.896 15 m
($9&%)[ 8.000000 8.896000 8.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
640.97284 544.25195 m
740.8941 544.25195 l
740.8941 583.93701 l
640.97284 583.93701 l
h
640.97284 544.25195 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 307.46674 67.952759 cm
-9.9280005 -3.447998 m
(\)8)[ 8.896000 0.000000 ] xS
-16.896 15 m
($9&')[ 8.000000 8.896000 8.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
640.97284 589.60632 m
740.8941 589.60632 l
740.8941 629.29132 l
640.97284 629.29132 l
h
640.97284 589.60632 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 307.46674 45.275593 cm
/F2.1[ 16 0 0 -16 0 0]sf
-18.664 6 m
(!"!)[ 16.000000 5.328000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
561.25983 187.08661 m
625.06061 187.08661 l
S
0 J
0 j
0 i
633.06061 187.08661 m
625.06061 184.08661 l
625.06061 190.08661 l
h
633.06061 187.08661 m
S
1 J
1 j
0.60000002 i
561.25983 352.92944 m
625.06061 352.92944 l
S
0 J
0 j
0 i
633.06061 352.92944 m
625.06061 349.92944 l
625.06061 355.92944 l
h
633.06061 352.92944 m
S
1 J
1 j
0.60000002 i
561.25983 521.58319 m
625.06061 521.58319 l
S
0 J
0 j
0 i
633.06061 521.58319 m
625.06061 518.58319 l
625.06061 524.58319 l
h
633.06061 521.58319 m
S
/Cs2 SC
0 sc
0.5 0 0 -0.5 305.65158 12.677167 cm
/F1.1[ 17 0 0 -17 0 0]sf
-27.080999 5.762001 m
(\)*$*+,')[ 9.452000 9.129000 8.500000 9.129000 3.774000 4.726000 0.000000 ] xS
0.5 0 0 -0.5 431.7933 12.677167 cm
-30.855 5.762001 m
(\)*$*+,:)[ 9.452000 9.129000 8.500000 9.129000 3.774000 4.726000 0.000000 ] xS
1 J
1 j
[
8
5
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
884.40942 153.07086 m
1000.6299 153.07086 l
1000.6299 297.63779 l
884.40942 297.63779 l
h
884.40942 153.07086 m
S
[] 0 d
893.25629 158.74016 m
993.17755 158.74016 l
993.17755 198.4252 l
893.25629 198.4252 l
h
893.25629 158.74016 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 433.60846 260.70865 cm
/F1.1[ 16 0 0 -16 0 0]sf
-16.440001 -3.447998 m
(!"#)[ 9.776000 12.144000 0.000000 ] xS
-8 15 m
(:)s
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
893.25629 204.09448 m
993.17755 204.09448 l
993.17755 243.77953 l
893.25629 243.77953 l
h
893.25629 204.09448 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 433.60846 238.03149 cm
-16.440001 -3.447998 m
(!"#)[ 9.776000 12.144000 0.000000 ] xS
-8 15 m
(:)s
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
893.25629 249.44882 m
993.17755 249.44882 l
993.17755 289.13385 l
893.25629 289.13385 l
h
893.25629 249.44882 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 433.60846 215.35432 cm
/F2.1[ 16 0 0 -16 0 0]sf
-18.664 6 m
(!"!)[ 16.000000 5.328000 0.000000 ] xS
[
8
5
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
884.40942 323.1496 m
1000.6299 323.1496 l
1000.6299 467.71652 l
884.40942 467.71652 l
h
884.40942 323.1496 m
S
[] 0 d
893.25629 328.81891 m
993.17755 328.81891 l
993.17755 368.50394 l
893.25629 368.50394 l
h
893.25629 328.81891 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 433.60846 175.6693 cm
/F1.1[ 16 0 0 -16 0 0]sf
-16 -3.447998 m
(\)"#)[ 8.896000 12.144000 0.000000 ] xS
-8 15 m
(:)s
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
893.25629 374.17322 m
993.17755 374.17322 l
993.17755 413.85828 l
893.25629 413.85828 l
h
893.25629 374.17322 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 433.60846 152.99213 cm
-16 -3.447998 m
(\)"#)[ 8.896000 12.144000 0.000000 ] xS
-8 15 m
(:)s
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
893.25629 419.52756 m
993.17755 419.52756 l
993.17755 459.21259 l
893.25629 459.21259 l
h
893.25629 419.52756 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 433.60846 130.31496 cm
/F2.1[ 16 0 0 -16 0 0]sf
-18.664 6 m
(!"!)[ 16.000000 5.328000 0.000000 ] xS
[
8
5
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
884.40942 493.22833 m
1000.6299 493.22833 l
1000.6299 637.79529 l
884.40942 637.79529 l
h
884.40942 493.22833 m
S
[] 0 d
893.25629 498.89764 m
993.17755 498.89764 l
993.17755 538.5827 l
893.25629 538.5827 l
h
893.25629 498.89764 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 433.60846 90.629921 cm
/F1.1[ 16 0 0 -16 0 0]sf
-9.9280005 -3.447998 m
(\)8)[ 8.896000 0.000000 ] xS
-8 15 m
(:)s
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
893.25629 544.25195 m
993.17755 544.25195 l
993.17755 583.93701 l
893.25629 583.93701 l
h
893.25629 544.25195 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 433.60846 67.952759 cm
-9.9280005 5.776001 m
(\)8)[ 8.896000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
893.25629 589.60632 m
993.17755 589.60632 l
993.17755 629.29132 l
893.25629 629.29132 l
h
893.25629 589.60632 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 433.60846 45.275593 cm
/F2.1[ 16 0 0 -16 0 0]sf
-18.664 6 m
(!"!)[ 16.000000 5.328000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
784.48816 184.25197 m
874.50946 184.25197 l
S
0 J
0 j
0 i
882.50946 184.25197 m
874.50946 181.25197 l
874.50946 187.25197 l
h
882.50946 184.25197 m
S
1 J
1 j
0.60000002 i
784.48816 351.49606 m
874.50946 351.49606 l
S
0 J
0 j
0 i
882.50946 351.49606 m
874.50946 348.49606 l
874.50946 354.49606 l
h
882.50946 351.49606 m
S
1 J
1 j
0.60000002 i
784.48816 521.57483 m
874.50946 521.57483 l
S
0 J
0 j
0 i
882.50946 521.57483 m
874.50946 518.57483 l
874.50946 524.57483 l
h
882.50946 521.57483 m
S
1 J
1 j
0.60000002 i
1152.9921 382.67715 m
1252.9133 382.67715 l
1252.9133 420.94489 l
1152.9921 420.94489 l
h
1152.9921 382.67715 m
S
/Cs2 SC
0 sc
0 i
0.5 0 0 -0.5 563.47638 149.09448 cm
/F1.1[ 16 0 0 -16 0 0]sf
-16.440001 5.776001 m
(!"#)[ 9.776000 12.144000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
365.66928 116.22047 m
1119.6851 116.22047 l
S
[
1
4
] 0 d
164.40945 136.06299 m
320.31497 136.06299 l
320.31497 657.63782 l
164.40945 657.63782 l
h
164.40945 136.06299 m
S
[] 0 d
243.59233 136.06299 m
243.77953 96.377953 l
S
600.94489 116.22047 m
600.94489 416.6929 l
S
601.94489 416.6929 m
622.22595 416.6929 l
S
0 J
0 j
0 i
630.22595 416.6929 m
622.22595 413.6929 l
622.22595 419.6929 l
h
630.22595 416.6929 m
S
1 J
1 j
0.60000002 i
600.94489 245 m
622.22601 245.01767 l
S
0 J
0 j
0 i
630.22595 245.02432 m
622.22845 242.01767 l
622.22351 248.01767 l
h
630.22595 245.02432 m
S
1 J
1 j
0.60000002 i
243.77953 96.377953 m
581.10236 96.377953 l
S
581.10236 96.377953 m
581.10236 555.59058 l
S
581.10236 555.59058 m
622.22675 555.08405 l
S
0 J
0 j
0 i
630.22614 554.98553 m
622.18976 552.08429 l
622.26367 558.0838 l
h
630.22614 554.98553 m
S
1 J
1 j
0.60000002 i
581.10236 382.57932 m
622.22632 382.24088 l
S
0 J
0 j
0 i
630.22607 382.17502 m
622.2016 379.24097 l
622.25098 385.24075 l
h
630.22607 382.17502 m
S
1 J
1 j
0.60000002 i
581.10236 215.51877 m
622.22601 215.62796 l
S
0 J
0 j
0 i
630.22601 215.6492 m
622.23401 212.62796 l
622.21808 218.62794 l
h
630.22601 215.6492 m
S
1 J
1 j
0.60000002 i
853.22833 116.22047 m
854.22833 436.53543 l
S
854.22833 436.53543 m
874.51038 436.81363 l
S
0 J
0 j
0 i
882.50964 436.92337 m
874.55151 433.81393 l
874.46924 439.81335 l
h
882.50964 436.92337 m
S
1 J
1 j
0.60000002 i
853.70453 268.75015 m
875.59521 268.97949 l
S
0 J
0 j
0 i
883.59479 269.06332 m
875.62665 265.97968 l
875.56378 271.97934 l
h
883.59479 269.06332 m
S
1 J
1 j
0.60000002 i
833.3858 96.377953 m
832.3858 583.93701 l
S
832.3858 583.93701 m
874.51019 583.42816 l
S
0 J
0 j
0 i
882.50958 583.33154 m
874.47394 580.42841 l
874.54639 586.42792 l
h
882.50958 583.33154 m
S
1 J
1 j
0.60000002 i
832.74353 409.52509 m
874.50946 409.45566 l
S
0 J
0 j
0 i
882.50946 409.44235 m
874.50446 406.45566 l
874.51447 412.45566 l
h
882.50946 409.44235 m
S
1 J
1 j
0.60000002 i
833.09479 238.27837 m
874.50946 238.20871 l
S
0 J
0 j
0 i
882.50946 238.19525 m
874.50439 235.20871 l
874.51453 241.20869 l
h
882.50946 238.19525 m
S
1 J
1 j
0.60000002 i
453.81683 136.06299 m
453.5433 73.70079 l
S
453.5433 73.70079 m
1020.4724 76.535431 l
S
809.97882 75.482964 m
810.70868 552.75592 l
S
581.10236 96.377953 m
833.3858 96.377953 l
S
810.70868 552.75592 m
874.51038 553.62329 l
S
0 J
0 j
0 i
882.50964 553.73206 m
874.55115 550.6236 l
874.4696 556.62305 l
h
882.50964 553.73206 m
S
1 J
1 j
0.60000002 i
810.18201 208.33475 m
874.50946 208.28432 l
S
0 J
0 j
0 i
882.50946 208.27805 m
874.50708 205.28432 l
874.51178 211.28432 l
h
882.50946 208.27805 m
S
1 J
1 j
0.60000002 i
810.44189 378.30862 m
875.1554 377.95135 l
S
0 J
0 j
0 i
883.15527 377.9072 m
875.13885 374.95139 l
875.17194 380.95129 l
h
883.15527 377.9072 m
S
1 J
1 j
0.60000002 i
833.3858 96.377953 m
1097.0078 96.377953 l
S
1119.6851 116.22047 m
1119.6851 413.85828 l
S
1097.0078 96.377953 m
1097.0078 402.51968 l
S
1020.4724 76.535431 m
1074.3307 76.535431 l
S
1074.3307 76.535431 m
1074.3307 385.51181 l
S
943.60632 136.06299 m
943.93701 56.692913 l
S
943.93701 56.692913 m
1051.6536 56.692913 l
S
1051.6536 56.692913 m
1051.6536 365.66928 l
S
1119.6851 413.85828 m
1143.6824 405.17838 l
S
0 J
0 j
0 i
1151.2054 402.45728 m
1142.662 402.35724 l
1144.7028 407.99951 l
h
1151.2054 402.45728 m
S
1 J
1 j
0.60000002 i
1097.0078 402.51968 m
1143.0929 401.93634 l
S
0 J
0 j
0 i
1151.0923 401.83508 m
1143.0549 398.93655 l
1143.1309 404.9361 l
h
1151.0923 401.83508 m
S
1 J
1 j
0.60000002 i
1074.3307 385.51181 m
1143.2981 399.80234 l
S
0 J
0 j
0 i
1151.1316 401.42551 m
1143.9067 396.86475 l
1142.6893 402.73993 l
h
1151.1316 401.42551 m
S
1 J
1 j
0.60000002 i
1051.6536 365.66928 m
1143.6674 398.48541 l
S
0 J
0 j
0 i
1151.2025 401.17279 m
1144.6752 395.65976 l
1142.6597 401.3111 l
h
1151.2025 401.17279 m
S
/Cs2 SC
0 sc
0.5 0 0 -0.5 560.76965 12.677167 cm
/F1.1[ 17 0 0 -17 0 0]sf
-36.209999 5.762001 m
(;<=,\)*$*+)[ 7.871000 9.758000 10.081000 4.726000 9.452000 9.129000 8.500000 9.129000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
0.5 0 0 -0.5 -38 350 cm
346.25 96.377953 m
345.82678 541.4173 l
S
559.47607 78.268265 m
561.25983 521.58319 l
S
785.19684 76.535431 m
784.48816 521.57483 l
S
ep
end
%%Trailer
%%EOF
